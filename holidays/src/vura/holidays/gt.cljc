;; This file is autogenerated using vura.holidays.compile/-main

(ns vura.holidays.gt
  (:require 
  [clojure.string]
  [vura.holidays :refer [is-holiday?]]
  [vura.holidays.name :as n]
  [vura.holidays.compiler :as compiler]))


(def holidays
  {"01-01" {:name (partial n/get-name "01-01")},
 "12-31 12:00" {:name (partial n/get-name "12-31")},
 "09-15" {:name (partial n/get-name "Independence Day")},
 "11-01" {:name (partial n/get-name "11-01")},
 "easter -1" {:name (partial n/get-name "easter -1")},
 "easter" {"type" "observance", :name (partial n/get-name "easter")},
 "10-20" {:name (partial n/get-name "Revolution Day")},
 "easter -2" {:name (partial n/get-name "easter -2")},
 "05-01" {:name (partial n/get-name "05-01")},
 "easter -3" {:name (partial n/get-name "easter -3")},
 "12-24 12:00" {:name (partial n/get-name "12-24")},
 "06-30 if tuesday then previous monday if wednesday,thursday then next friday"
 {:name {:es "DÃ­a de las Fuerzas Armadas", :en "Army Day"}},
 "12-25" {:name (partial n/get-name "12-25")}}
)


(def locale-holiday-mapping
  (reduce-kv
    (fn [result definition name-mapping]
      (assoc result
             (compiler/compile-type (compiler/parse-definition definition))
             name-mapping))
    nil
    holidays))


(defn holiday?
  [context]
  (some
   (fn [[pred naming]]
     (when (pred context)
       naming))
   locale-holiday-mapping))


(defmethod is-holiday? :gt
  [_ context]
  (holiday? context))