;; This file is autogenerated using vura.holidays.compile/-main

(ns vura.holidays.tz
  (:require 
  [clojure.string]
  [vura.holidays :refer [is-holiday?]]
  [vura.holidays.name :as n]
  [vura.holidays.compiler :as compiler]))


(def holidays
  {"10 Dhu al-Hijjah" {:name (partial n/get-name "10 Dhu al-Hijjah")},
 "01-01" {:name (partial n/get-name "01-01")},
 "01-02" {:name {:en "Zanzibar Revolution Day"}},
 "04-26" {:name {:en "Union Day"}},
 "10-14" {:name {:en "Nyerere Day"}},
 "08-08" {:name {:en "Nane Nane Day"}},
 "easter" {"type" "observance", :name (partial n/get-name "easter")},
 "easter -2" {:name (partial n/get-name "easter -2")},
 "12-26" {:name (partial n/get-name "12-25")},
 "easter 1" {:name (partial n/get-name "easter 1")},
 "12-09" {:name (partial n/get-name "Independence Day")},
 "05-01" {:name (partial n/get-name "05-01")},
 "07-07" {:name {:en "Saba Saba Day"}},
 "12 Rabi al-awwal"
 {"_name" "12 Rabi al-awwal", :name {:en "Maulid Day"}},
 "1 Shawwal P2D" {:name (partial n/get-name "1 Shawwal")},
 "04-07" {:name {:en "Karume Day"}},
 "12-25" {:name (partial n/get-name "12-25")}}
)


(def locale-holiday-mapping
  (reduce-kv
    (fn [result definition name-mapping]
      (assoc result
             (compiler/compile-type (compiler/parse-definition definition))
             name-mapping))
    nil
    holidays))


(defn holiday?
  [context]
  (some
   (fn [[pred naming]]
     (when (pred context)
       naming))
   locale-holiday-mapping))


(defmethod is-holiday? :tz
  [_ context]
  (holiday? context))