;; This file is autogenerated using vura.holidays.compile/-main

(ns vura.holidays.bl
  (:require 
  [clojure.string]
  [vura.holidays :refer [is-holiday?]]
  [vura.holidays.name :as n]
  [vura.holidays.compiler :as compiler]))


(def holidays
  {"easter -46"
 {"type" "observance", :name (partial n/get-name "easter -46")},
 "10-09" {:name (partial n/get-name "Abolition of Slavery")},
 "easter -48"
 {"type" "observance", :name (partial n/get-name "easter -48")},
 "08-24"
 {"type" "observance",
  :name {:fr "Fête de Saint Barthélemy", :en "Saint Barth"}},
 "easter -47"
 {"type" "Observance", :name (partial n/get-name "easter -47")},
 "easter" {"type" "observance", :name (partial n/get-name "easter")},
 "easter -21"
 {"type" "observance", :name {:fr "Mi-Carême", :en "Laetare Sunday"}},
 "easter -2" {"type" "bank", :name (partial n/get-name "easter -2")},
 "12-25" {:name (partial n/get-name "12-25")}}
)


(def locale-holiday-mapping
  (reduce-kv
    (fn [result definition name-mapping]
      (assoc result
             (compiler/compile-type (compiler/parse-definition definition))
             name-mapping))
    nil
    holidays))


(defn holiday?
  [context]
  (some
   (fn [[pred naming]]
     (when (pred context)
       naming))
   locale-holiday-mapping))


(defmethod is-holiday? :bl
  [_ context]
  (holiday? context))