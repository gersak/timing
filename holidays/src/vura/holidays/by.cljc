;; This file is autogenerated using vura.holidays.compile/-main

(ns vura.holidays.by
  (:require 
  [clojure.string]
  [vura.holidays :refer [is-holiday?]]
  [vura.holidays.name :as n]
  [vura.holidays.compiler :as compiler]))


(def holidays
  {"01-01" {:name (partial n/get-name "01-01")},
 "07-03"
 {"active" [{"from" 1996}],
  :name (partial n/get-name "Independence Day")},
 "05-09" {:name {:en "Victory Day", :be "Дзень Перамогi"}},
 "easter"
 {"_name" "easter",
  "type" "observance",
  :name {:be "Вялiкдзень каталiцкi"}},
 "orthodox +9" {:name {:en "Commemoration Day", :be "Радунiца"}},
 "03-08" {:name (partial n/get-name "03-08")},
 "julian 12-25" {"_name" "12-25", :name {:be "Каляды праваслаўныя"}},
 "05-01" {:name (partial n/get-name "05-01")},
 "orthodox"
 {"type" "observance",
  :name {:en "Orthodox Easter", :be "Вялiкдзень праваслаўны"}},
 "11-07"
 {:name
  {:en "October Revolution Day", :be "Дзень Кастрычніцкай рэвалюцыі"}},
 "12-25" {"_name" "12-25", :name {:be "Каляды каталiцкiя"}}}
)


(def locale-holiday-mapping
  (reduce-kv
    (fn [result definition name-mapping]
      (assoc result
             (compiler/compile-type (compiler/parse-definition definition))
             name-mapping))
    nil
    holidays))


(defn holiday?
  [context]
  (some
   (fn [[pred naming]]
     (when (pred context)
       naming))
   locale-holiday-mapping))


(defmethod is-holiday? :by
  [_ context]
  (holiday? context))