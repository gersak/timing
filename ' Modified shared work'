(in-ns 'vura.jobs)

(def ^:dynamic *workers-number* )

(defmacro shared-work-template 
  ([coll fun threads timeout]
   `(let [pool# (Executors/newFixedThreadPool ~threads) 
          tasks# (for [x# ~coll] #(~fun x#))
          results# (.invokeAll pool# tasks#)]
      (for [x# results#]
        (.get x#)))))

(defn shared-work
  ([coll fun] (shared-work coll fun 10))
  ([coll fun threads] (shared-work coll fun threads nil))
  ([coll fun threads timeout] (shared-work-template coll fun threads timeout)))

